spring.application.name=mvt-events

# Database Configuration (with environment variable support)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5435/mvt-events}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:mvt}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:mvtpass}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Logging Configuration for debugging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.com.mvt.mvt_events.tenant=DEBUG

# AOP Configuration for Tenant Filtering
spring.aop.auto=true
spring.aop.proxy-target-class=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.validate-on-migrate=true

# JWT Configuration (Development defaults - override in production with environment variables)
jwt.secret=${JWT_SECRET:mvt-events-secret-key-for-jwt-authentication-very-long-secret-key-256-bits}
jwt.expiration=${JWT_EXPIRATION:18000}

# Security Configuration - Allow all access for development
spring.security.user.name=admin
spring.security.user.password=admin

# Actuator Security Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator

# Server Configuration
server.port=${SERVER_PORT:8080}

# Payment Configuration
# Default payment provider: STRIPE, MERCADOPAGO, or PAYPAL
payment.provider=${PAYMENT_PROVIDER:STRIPE}

# Stripe Configuration
payment.stripe.public-key=${STRIPE_PUBLIC_KEY:pk_test_PLACEHOLDER_REPLACE_WITH_REAL_KEY}
payment.stripe.secret-key=${STRIPE_SECRET_KEY:sk_test_PLACEHOLDER_REPLACE_WITH_REAL_KEY}
# Webhook secret do Stripe CLI
payment.stripe.webhook-secret=${STRIPE_WEBHOOK_SECRET:whsec_PLACEHOLDER_REPLACE_WITH_REAL_SECRET}

# MercadoPago Configuration
payment.mercadopago.public-key=${MERCADOPAGO_PUBLIC_KEY:}
payment.mercadopago.access-token=${MERCADOPAGO_ACCESS_TOKEN:}
payment.mercadopago.webhook-secret=${MERCADOPAGO_WEBHOOK_SECRET:}

# PayPal Configuration
payment.paypal.client-id=${PAYPAL_CLIENT_ID:}
payment.paypal.client-secret=${PAYPAL_CLIENT_SECRET:}
payment.paypal.environment=${PAYPAL_ENVIRONMENT:sandbox}

# Payment URLs (used for redirects and webhooks)
payment.return-url=${PAYMENT_RETURN_URL:http://localhost:3000/payment/success}
payment.cancel-url=${PAYMENT_CANCEL_URL:http://localhost:3000/payment/cancel}
payment.webhook-url=${PAYMENT_WEBHOOK_URL:http://localhost:8080/api/payments/webhook}
